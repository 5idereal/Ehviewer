package com.hippo.ehviewer.ui.compose

import androidx.collection.lruCache
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.currentCompositeKeyHash
import androidx.compose.runtime.remember

private val remembered = lruCache<String, Any>(1)

@Composable
fun <T : Any> rememberGlobally(
    vararg inputs: Any?,
    key: String? = null,
    init: () -> T,
): T {
    // key is the one provided by the user or the one generated by the compose runtime
    val finalKey = if (!key.isNullOrEmpty()) {
        key
    } else {
        currentCompositeKeyHash.toString(36)
    }
    // value is restored using the registry or created via [init] lambda
    val value = remember(*inputs) {
        @Suppress("UNCHECKED_CAST")
        val restored = remembered[finalKey] as? T
        restored ?: init()
    }

    LaunchedEffect(finalKey) {
        remembered.put(finalKey, value)
    }
    return value
}
